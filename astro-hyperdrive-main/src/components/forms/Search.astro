---
import { getMakeModelSet } from "~/utils/helpers";
import { conditions } from "~/content.config";
import IconSearch from "~/assets/images/icons/search.svg";
import IconChevronDown from "~/assets/images/icons/chevron-down-select.svg";

const allCars = await getMakeModelSet();
---

<form
	id="form-widget-search"
	action="/cars"
	method="get"
	class="grid grid-cols-1 lg:grid-cols-2 gap-4"
	data-car-set={JSON.stringify(allCars)}
>
	<div>
		<label class="sr-only" for="make">Make</label>
		<div class="grid grid-cols-1">
			<select name="make" id="make" class="appearance-none col-start-1 row-start-1">
				<option value="all">Choose make</option>
				{allCars.map((car) => <option value={car.make}>{car.make}</option>)}
			</select>
			<IconChevronDown class="icon-chevron-down" />
		</div>
	</div>
	<div>
		<label class="sr-only" for="model">Model</label>
		<div class="grid grid-cols-1">
			<select name="model" id="model" class="appearance-none col-start-1 row-start-1">
				<option value="all">Choose model</option>
			</select>
			<IconChevronDown class="icon-chevron-down" />
		</div>
	</div>
	<div>
		<label class="sr-only" for="condition">Condition</label>
		<div class="grid grid-cols-1">
			<select name="condition" id="condition" class="appearance-none col-start-1 row-start-1">
				<option value="all">Choose condition</option>
				{conditions.map((condition) => <option value={condition}>{condition}</option>)}
			</select>
			<IconChevronDown class="icon-chevron-down" />
		</div>
	</div>

	<div>
		<button type="submit" class="bg-yellow-200 mt-1 rounded-md py-1.5 font-semibold w-full hover:opacity-80 transition">
			<IconSearch class="size-5 -mt-0.5 inline-block" />
			<span>Search</span>
		</button>
	</div>
</form>

<script>
	document.addEventListener("astro:page-load", function () {
		const form = document.getElementById("form-widget-search") as HTMLFormElement;

		if (form) {
			const dataCarSet = form.getAttribute("data-car-set");
			const allCars = dataCarSet ? JSON.parse(dataCarSet) : [];
			const makeSelect = document.getElementById("make")! as HTMLSelectElement;
			const modelSelect = document.getElementById("model")! as HTMLSelectElement;

			const populateModels = (selectedMake: string) => {
				modelSelect.innerHTML = '<option value="all">Choose model</option>';
				allCars.forEach((car: { make: string; models: string[] }) => {
					if (car.make === selectedMake) {
						car.models.forEach((model) => {
							modelSelect.innerHTML += `<option value="${model}">${model}</option>`;
						});
					}
				});
			};

			populateModels(makeSelect.value);

			makeSelect.addEventListener("change", function () {
				populateModels(makeSelect.value);
			});
		}
	});
</script>
